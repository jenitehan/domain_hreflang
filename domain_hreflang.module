<?php

/**
 * @file
 * Contains domain_hreflang.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function domain_hreflang_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the domain_hreflang module.
    case 'help.page.domain_hreflang':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Outputs hreflang meta tags per domain.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_page_attachments().
 */
function domain_hreflang_page_attachments(array &$attachments) {
  
  // Front pages.
  if (\Drupal::service('path.matcher')->isFrontPage()) {
    $domains = \Drupal::service('domain.loader')->loadMultiple();
    foreach ($domains as $domain) {
      $hreflang = $domain->getThirdPartySetting('domain_hreflang', 'hreflang');
      if ($hreflang) {
        $attachments['#attached']['html_head'][] = domain_hreflang_tag($domain->getUrl(), $hreflang, 'hreflang_' . $domain->id());
      }
    }
  }
}

/**
 * Outputs the tag.
 * @param $url
 *    The URL to output as the href attribute.
 * @param $hreflang
 *    The language code to output as the hreflang attribute.
 * @param $name
 *    Unique name to assign to this tag.
 */
function domain_hreflang_tag($url, $hreflang, $name) {
  $tag = [
    '#tag' => 'link',
    '#attributes' => [
      'href' => $url,
      'rel' => 'alternate',
      'hreflang' => $hreflang,
    ],
  ];
  return [$tag, $name];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function domain_hreflang_form_domain_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $domain = $form_state->getFormObject()->getEntity();
  
  $form['hreflang'] = [
    '#type' => 'select',
    '#title' => t('Hreflang'),
    '#options' => [
      'en' => 'en',
      'en-au' => 'en-au',
      'en-ca' => 'en-ca',
      'en-gb' => 'en-gb',
      'en-ie' => 'en-ie',
      'en-nz' => 'en-nz',
      'en-us' => 'en-us',
      'en-za' => 'en-za',
    ],
    '#empty_option' => t('- None -'),
    '#default_value' => $domain->getThirdPartySetting('domain_hreflang', 'hreflang'),
  ];
  
  $form['#entity_builders'][] = 'domain_hreflang_form_builder';
}

/**
 * Entity builder for Domain entities.
 */
function domain_hreflang_form_builder($entity_type, \Drupal\domain\Entity\Domain $domain, &$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  if ($form_state->getValue('hreflang')) {
    $domain->setThirdPartySetting('domain_hreflang', 'hreflang', $form_state->getValue('hreflang'));
    return;
  }
 
  $domain->unsetThirdPartySetting('domain_hreflang', 'hreflang');
}
